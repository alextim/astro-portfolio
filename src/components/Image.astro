---
import Image from '@11ty/eleventy-img';
import { Markdown } from 'astro/components';
import { generateImage, ImageOptions, generatePlaceholder, PlaceholderOptions } from '../astro-eleventy-img';

import escapeHTML from '@/lib/escapeHTML';

interface Props {
  src: string;
  alt?: string;
  caption?: string;
  options?: ImageOptions;
  sizes?: string;
  classes?: string;
  imgClasses?: string;
  quality?: number;
  placeholderOptions?: PlaceholderOptions;
}

const { src, alt = '', caption, options = {}, sizes = '', classes = '', imgClasses = '', quality = 90, placeholderOptions = {} } = Astro.props as Props;

const opts = {
  ...options,
  widths: [null],
  formats: ['avif', 'webp', 'jpg'],
  sharpWebpOptions: {
    quality,
  },
  sharpAvifOptions: {
    quality,
  },
};

const metadata = generateImage(src, opts);

// const placeHolder = await generatePlaceholder(src, placeholderOptions);

const imageAttributes = {
  alt: escapeHTML(alt),
  sizes: sizes,
  loading: 'lazy',
  decoding: 'async',
  // style: `background-size: cover;background-image:url(${placeHolder.dataURI})`,
  // onload: `this.style.backgroundImage='none'`,
  class: imgClasses,
};

const html = Image.generateHTML(metadata, imageAttributes);
const props: Record<string, string> = {};
props.class = classes;
---

<figure {...props}>
  <Fragment set:html={html} />
  {caption && (
    <figcaption>
      <Markdown>{escapeHTML(caption)}</Markdown>
    </figcaption>
  )}
</figure>
