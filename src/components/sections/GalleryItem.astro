---
import type { PictureHTMLData } from 'astro-imagetools';
import { renderPicture } from 'astro-imagetools/api';

import escapeHTML from '@/lib/escapeHTML';
import getImagePath from '@/helpers/getImagePath';
import getImageFormats from '@/helpers/getImageFormats';

export interface Props {
  item: SectionItem;
}

function getImgHTML(s: string) {
  const n1 = s.indexOf('<img');
  const n2 = s.indexOf('>', n1);
  return s.substring(n1, n2);
}

function getVal(tag: string, s: string) {
  const n1 = s.indexOf(`${tag}="`) + tag.length + 2;
  const n2 = s.indexOf('"', n1);
  return s.substring(n1, n2);
}

const {
  item: { title, subtitle, image },
} = Astro.props as Props;

const src = getImagePath(image?.src!);

const { link, style, picture }: PictureHTMLData = await renderPicture({
  src,
  alt: escapeHTML(image?.alt),
  layout: 'fill',
  format: getImageFormats() as unknown as [],
});

const imgHTML = getImgHTML(picture);

const w = getVal('width', imgHTML);
const h = getVal('height', imgHTML);
const href = getVal('src', imgHTML);
---

<a role='button' tabindex={-1} class='gallery-item' href={href} data-pswp-width={w} data-pswp-height={h} target='_blank'>
  <Fragment set:html={link + style + picture} />
  <div class='gallery-item_caption'>
    <div class='gallery-item_category'>{subtitle}</div>
    <div class='gallery-item_name'>{title}</div>
  </div>
</a>

<style>
  .gallery-item {
    @apply relative block bg-transparent;

    &:hover > .gallery-item__caption {
      @apply opacity-100;
    }
  }

  .gallery-item_caption {
    @apply absolute bottom-0
    z-10 flex h-full w-full
    flex-col items-center

    justify-center
    bg-[rgba(244,98,58,.9)] text-center
    text-white opacity-0
    transition-opacity;
  }

  .gallery-item_category {
    @apply text-sm font-semibold uppercase text-gray-50;
  }

  .gallery-item_name {
    @apply text-lg;
  }
</style>
